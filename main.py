# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Jul  6 11:33:39 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))