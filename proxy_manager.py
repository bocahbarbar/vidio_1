# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Jul  7 01:50:03 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))